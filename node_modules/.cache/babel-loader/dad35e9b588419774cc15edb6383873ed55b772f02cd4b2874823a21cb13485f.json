{"ast":null,"code":"var _jsxFileName = \"/Users/aaditya.chopra/Downloads/developerFolio/src/components/experienceCard/ExperienceCard.js\",\n  _s = $RefreshSig$();\n/*import React, {useState, createRef} from \"react\";\nimport \"./ExperienceCard.scss\";\nimport ColorThief from \"colorthief\";\n\nexport default function ExperienceCard({ workExperiences, isDark }) {\n  const [colorArrays, setColorArrays] = useState([]);\n  const imgRef = createRef();\n\n  function getColorArrays() {\n    const colorThief = new ColorThief();\n    setColorArrays(colorThief.getColor(imgRef.current));\n  }\n\n  function rgb(values) {\n    return typeof values === \"undefined\"\n      ? null\n      : \"rgb(\" + values.join(\", \") + \")\";\n  }\n\n  const GetDescBullets = ({ descBullets, isDark }) => {\n    return descBullets\n      ? descBullets.map((item, i) => (\n          <li\n            key={i}\n            className={isDark ? \"subTitle dark-mode-text\" : \"subTitle\"}\n          >\n            {item}\n          </li>\n        ))\n      : null;\n  };\n\n  return (\n    <div className=\"timeline\">\n      {workExperiences.map((cardInfo, index) => (\n        <div key={index} className=\"timeline-item\">\n          <span className=\"timeline-bullet\"></span>\n          <div className={isDark ? \"experience-card-dark\" : \"experience-card\"}>\n            <div\n              style={{ background: rgb(colorArrays) }}\n              className=\"experience-banner\"\n            >\n              <div className=\"experience-blurred_div\"></div>\n              <div className=\"experience-div-company\">\n                <h5 className=\"experience-text-company\">{cardInfo.company}</h5>\n              </div>\n\n              <img\n                crossOrigin={\"anonymous\"}\n                ref={imgRef}\n                className=\"experience-roundedimg\"\n                src={cardInfo.logo_path}\n                alt={cardInfo.company}\n                //onLoad={() => getColorArrays()}\n              />\n            </div>\n            <div className=\"experience-text-details\">\n              <h5\n                className={\n                  isDark\n                    ? \"experience-text-role dark-mode-text\"\n                    : \"experience-text-role\"\n                }\n              >\n                {cardInfo.position}\n              </h5>\n              <h5\n                className={\n                  isDark\n                    ? \"experience-text-date dark-mode-text\"\n                    : \"experience-text-date\"\n                }\n              >\n                {cardInfo.date}\n              </h5>\n              <p\n                className={\n                  isDark\n                    ? \"subTitle experience-text-desc dark-mode-text\"\n                    : \"subTitle experience-text-desc\"\n                }\n              >\n                {cardInfo.desc}\n              </p>\n              <ul>\n                <GetDescBullets\n                  descBullets={cardInfo.descBullets}\n                  isDark={isDark}\n                />\n              </ul>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}*/\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport './Timeline.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeline = _ref => {\n  _s();\n  let {\n    experiences\n  } = _ref;\n  const timelineRef = useRef(null);\n  const bulletRefs = useRef([]);\n  const cardRefs = useRef([]);\n  const [activeBullet, setActiveBullet] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => {\n      const timelineScrollTop = timelineRef.current.scrollTop;\n      const bulletHeights = bulletRefs.current.map(bullet => bullet.offsetTop);\n      let newActiveBullet = 0;\n      for (let i = 0; i < bulletHeights.length; i++) {\n        if (timelineScrollTop >= bulletHeights[i]) {\n          newActiveBullet = i;\n        } else {\n          break;\n        }\n      }\n      setActiveBullet(newActiveBullet);\n    };\n    timelineRef.current.addEventListener('scroll', handleScroll);\n    return () => {\n      timelineRef.current.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  const handleBulletClick = index => {\n    setActiveBullet(index);\n    const card = cardRefs.current[index];\n    card.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-bullets\",\n      ref: timelineRef,\n      children: [experiences.map((experience, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bullet ${index === activeBullet ? 'active' : ''}`,\n        onClick: () => handleBulletClick(index),\n        ref: el => bulletRefs.current[index] = el,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-cards\",\n      children: experiences.map((experience, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${index === activeBullet ? 'active' : ''}`,\n        ref: el => cardRefs.current[index] = el,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-top\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: experience.imageLogo,\n            alt: experience.companyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: experience.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: experience.workDone.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"akCTMOMLjioF6xwAuzJeqGVy0ek=\");\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Timeline","_ref","_s","experiences","timelineRef","bulletRefs","cardRefs","activeBullet","setActiveBullet","handleScroll","timelineScrollTop","current","scrollTop","bulletHeights","map","bullet","offsetTop","newActiveBullet","i","length","addEventListener","removeEventListener","handleBulletClick","index","card","scrollIntoView","behavior","className","children","ref","experience","onClick","el","fileName","_jsxFileName","lineNumber","columnNumber","src","imageLogo","alt","companyName","title","workDone","item","_c","$RefreshReg$"],"sources":["/Users/aaditya.chopra/Downloads/developerFolio/src/components/experienceCard/ExperienceCard.js"],"sourcesContent":["/*import React, {useState, createRef} from \"react\";\nimport \"./ExperienceCard.scss\";\nimport ColorThief from \"colorthief\";\n\nexport default function ExperienceCard({ workExperiences, isDark }) {\n  const [colorArrays, setColorArrays] = useState([]);\n  const imgRef = createRef();\n\n  function getColorArrays() {\n    const colorThief = new ColorThief();\n    setColorArrays(colorThief.getColor(imgRef.current));\n  }\n\n  function rgb(values) {\n    return typeof values === \"undefined\"\n      ? null\n      : \"rgb(\" + values.join(\", \") + \")\";\n  }\n\n  const GetDescBullets = ({ descBullets, isDark }) => {\n    return descBullets\n      ? descBullets.map((item, i) => (\n          <li\n            key={i}\n            className={isDark ? \"subTitle dark-mode-text\" : \"subTitle\"}\n          >\n            {item}\n          </li>\n        ))\n      : null;\n  };\n\n  return (\n    <div className=\"timeline\">\n      {workExperiences.map((cardInfo, index) => (\n        <div key={index} className=\"timeline-item\">\n          <span className=\"timeline-bullet\"></span>\n          <div className={isDark ? \"experience-card-dark\" : \"experience-card\"}>\n            <div\n              style={{ background: rgb(colorArrays) }}\n              className=\"experience-banner\"\n            >\n              <div className=\"experience-blurred_div\"></div>\n              <div className=\"experience-div-company\">\n                <h5 className=\"experience-text-company\">{cardInfo.company}</h5>\n              </div>\n\n              <img\n                crossOrigin={\"anonymous\"}\n                ref={imgRef}\n                className=\"experience-roundedimg\"\n                src={cardInfo.logo_path}\n                alt={cardInfo.company}\n                //onLoad={() => getColorArrays()}\n              />\n            </div>\n            <div className=\"experience-text-details\">\n              <h5\n                className={\n                  isDark\n                    ? \"experience-text-role dark-mode-text\"\n                    : \"experience-text-role\"\n                }\n              >\n                {cardInfo.position}\n              </h5>\n              <h5\n                className={\n                  isDark\n                    ? \"experience-text-date dark-mode-text\"\n                    : \"experience-text-date\"\n                }\n              >\n                {cardInfo.date}\n              </h5>\n              <p\n                className={\n                  isDark\n                    ? \"subTitle experience-text-desc dark-mode-text\"\n                    : \"subTitle experience-text-desc\"\n                }\n              >\n                {cardInfo.desc}\n              </p>\n              <ul>\n                <GetDescBullets\n                  descBullets={cardInfo.descBullets}\n                  isDark={isDark}\n                />\n              </ul>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}*/\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport './Timeline.scss';\n\nconst Timeline = ({ experiences }) => {\n  const timelineRef = useRef(null);\n  const bulletRefs = useRef([]);\n  const cardRefs = useRef([]);\n  const [activeBullet, setActiveBullet] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const timelineScrollTop = timelineRef.current.scrollTop;\n      const bulletHeights = bulletRefs.current.map((bullet) => bullet.offsetTop);\n\n      let newActiveBullet = 0;\n      for (let i = 0; i < bulletHeights.length; i++) {\n        if (timelineScrollTop >= bulletHeights[i]) {\n          newActiveBullet = i;\n        } else {\n          break;\n        }\n      }\n\n      setActiveBullet(newActiveBullet);\n    };\n\n    timelineRef.current.addEventListener('scroll', handleScroll);\n\n    return () => {\n      timelineRef.current.removeEventListener('scroll', handleScroll);   \n\n    };\n  }, []);\n\n  const handleBulletClick = (index) => {\n    setActiveBullet(index);\n    const card = cardRefs.current[index];\n    card.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"timeline-container\">\n      <div className=\"timeline-bullets\" ref={timelineRef}>\n        {experiences.map((experience, index) => (\n          <div\n            key={index}\n            className={`bullet ${index === activeBullet ? 'active' : ''}`}\n            onClick={() => handleBulletClick(index)}\n            ref={(el) => (bulletRefs.current[index] = el)}\n          >\n            <span>{index + 1}</span>\n          </div>\n        ))}\n        <div className=\"line\"></div>\n      </div>\n      <div className=\"timeline-cards\">\n        {experiences.map((experience, index) => (\n          <div\n            key={index}\n            className={`card ${index === activeBullet ? 'active' : ''}`}\n            ref={(el) => (cardRefs.current[index] = el)}\n          >\n            <div className=\"card-top\">\n              <img src={experience.imageLogo} alt={experience.companyName} />\n            </div>\n            <div className=\"card-bottom\">\n              <h3>{experience.title}</h3>\n              <ul>\n                {experience.workDone.map((item, i) => (\n                  <li key={i}>{item}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Timeline;"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}