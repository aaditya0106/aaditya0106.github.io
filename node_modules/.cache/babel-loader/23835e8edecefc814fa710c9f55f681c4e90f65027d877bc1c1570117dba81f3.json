{"ast":null,"code":"var _jsxFileName = \"/Users/aaditya.chopra/Downloads/developerFolio/src/components/experienceCard/ExperienceCard.js\",\n  _s = $RefreshSig$();\n/*import React, {useState, createRef} from \"react\";\nimport \"./ExperienceCard.scss\";\nimport ColorThief from \"colorthief\";\n\nexport default function ExperienceCard({ workExperiences, isDark }) {\n  const [colorArrays, setColorArrays] = useState([]);\n  const imgRef = createRef();\n\n  function getColorArrays() {\n    const colorThief = new ColorThief();\n    setColorArrays(colorThief.getColor(imgRef.current));\n  }\n\n  function rgb(values) {\n    return typeof values === \"undefined\"\n      ? null\n      : \"rgb(\" + values.join(\", \") + \")\";\n  }\n\n  const GetDescBullets = ({ descBullets, isDark }) => {\n    return descBullets\n      ? descBullets.map((item, i) => (\n          <li\n            key={i}\n            className={isDark ? \"subTitle dark-mode-text\" : \"subTitle\"}\n          >\n            {item}\n          </li>\n        ))\n      : null;\n  };\n\n  return (\n    <div className=\"timeline\">\n      {workExperiences.map((cardInfo, index) => (\n        <div key={index} className=\"timeline-item\">\n          <span className=\"timeline-bullet\"></span>\n          <div className={isDark ? \"experience-card-dark\" : \"experience-card\"}>\n            <div\n              style={{ background: rgb(colorArrays) }}\n              className=\"experience-banner\"\n            >\n              <div className=\"experience-blurred_div\"></div>\n              <div className=\"experience-div-company\">\n                <h5 className=\"experience-text-company\">{cardInfo.company}</h5>\n              </div>\n\n              <img\n                crossOrigin={\"anonymous\"}\n                ref={imgRef}\n                className=\"experience-roundedimg\"\n                src={cardInfo.logo_path}\n                alt={cardInfo.company}\n                //onLoad={() => getColorArrays()}\n              />\n            </div>\n            <div className=\"experience-text-details\">\n              <h5\n                className={\n                  isDark\n                    ? \"experience-text-role dark-mode-text\"\n                    : \"experience-text-role\"\n                }\n              >\n                {cardInfo.position}\n              </h5>\n              <h5\n                className={\n                  isDark\n                    ? \"experience-text-date dark-mode-text\"\n                    : \"experience-text-date\"\n                }\n              >\n                {cardInfo.date}\n              </h5>\n              <p\n                className={\n                  isDark\n                    ? \"subTitle experience-text-desc dark-mode-text\"\n                    : \"subTitle experience-text-desc\"\n                }\n              >\n                {cardInfo.desc}\n              </p>\n              <ul>\n                <GetDescBullets\n                  descBullets={cardInfo.descBullets}\n                  isDark={isDark}\n                />\n              </ul>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}*/\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ExperienceCard.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExperienceCard(_ref) {\n  _s();\n  let {\n    workExperiences,\n    isDark\n  } = _ref;\n  const timelineRef = useRef(null);\n  const bulletRefs = useRef([]);\n  const cardRefs = useRef([]);\n  const [activeBullet, setActiveBullet] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => {\n      const timelineScrollTop = timelineRef.current.scrollTop;\n      const bulletHeights = bulletRefs.current.map(bullet => bullet.offsetTop);\n      let newActiveBullet = 0;\n      for (let i = 0; i < bulletHeights.length; i++) {\n        if (timelineScrollTop >= bulletHeights[i]) {\n          newActiveBullet = i;\n        } else {\n          break;\n        }\n      }\n      setActiveBullet(newActiveBullet);\n\n      // Update bullet and card fades based on scroll position\n      bulletRefs.current.forEach((bullet, index) => {\n        const bulletTop = bullet.offsetTop;\n        const bulletHeight = bullet.offsetHeight;\n        const scrollOffset = timelineScrollTop - bulletTop;\n        const fadeFactor = Math.min(1, Math.max(0, scrollOffset / bulletHeight));\n        bullet.style.opacity = 1 - fadeFactor;\n      });\n      cardRefs.current.forEach((card, index) => {\n        const cardTop = card.offsetTop;\n        const cardHeight = card.offsetHeight;\n        const scrollOffset = timelineScrollTop - cardTop;\n        const fadeFactor = Math.min(1, Math.max(0, scrollOffset / cardHeight));\n        card.style.opacity = 1 - fadeFactor;\n      });\n    };\n    timelineRef.current.addEventListener('scroll', handleScroll);\n    return () => {\n      timelineRef.current.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  const handleBulletClick = index => {\n    setActiveBullet(index);\n    const card = cardRefs.current[index];\n    card.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timeline-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-bullets\",\n      ref: timelineRef,\n      children: [workExperiences.map((experience, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bullet ${index === activeBullet ? 'active' : ''}`,\n        onClick: () => handleBulletClick(index),\n        ref: el => bulletRefs.current[index] = el,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-cards\",\n      children: workExperiences.map((experience, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${index === activeBullet ? 'active' : ''}`,\n        ref: el => cardRefs.current[index] = el,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-top\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: experience.logo_path,\n            alt: experience.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: experience.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: experience.descPoints.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: item\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(ExperienceCard, \"akCTMOMLjioF6xwAuzJeqGVy0ek=\");\n_c = ExperienceCard;\n;\nvar _c;\n$RefreshReg$(_c, \"ExperienceCard\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","ExperienceCard","_ref","_s","workExperiences","isDark","timelineRef","bulletRefs","cardRefs","activeBullet","setActiveBullet","handleScroll","timelineScrollTop","current","scrollTop","bulletHeights","map","bullet","offsetTop","newActiveBullet","i","length","forEach","index","bulletTop","bulletHeight","offsetHeight","scrollOffset","fadeFactor","Math","min","max","style","opacity","card","cardTop","cardHeight","addEventListener","removeEventListener","handleBulletClick","scrollIntoView","behavior","className","children","ref","experience","onClick","el","fileName","_jsxFileName","lineNumber","columnNumber","src","logo_path","alt","company","title","descPoints","item","_c","$RefreshReg$"],"sources":["/Users/aaditya.chopra/Downloads/developerFolio/src/components/experienceCard/ExperienceCard.js"],"sourcesContent":["/*import React, {useState, createRef} from \"react\";\nimport \"./ExperienceCard.scss\";\nimport ColorThief from \"colorthief\";\n\nexport default function ExperienceCard({ workExperiences, isDark }) {\n  const [colorArrays, setColorArrays] = useState([]);\n  const imgRef = createRef();\n\n  function getColorArrays() {\n    const colorThief = new ColorThief();\n    setColorArrays(colorThief.getColor(imgRef.current));\n  }\n\n  function rgb(values) {\n    return typeof values === \"undefined\"\n      ? null\n      : \"rgb(\" + values.join(\", \") + \")\";\n  }\n\n  const GetDescBullets = ({ descBullets, isDark }) => {\n    return descBullets\n      ? descBullets.map((item, i) => (\n          <li\n            key={i}\n            className={isDark ? \"subTitle dark-mode-text\" : \"subTitle\"}\n          >\n            {item}\n          </li>\n        ))\n      : null;\n  };\n\n  return (\n    <div className=\"timeline\">\n      {workExperiences.map((cardInfo, index) => (\n        <div key={index} className=\"timeline-item\">\n          <span className=\"timeline-bullet\"></span>\n          <div className={isDark ? \"experience-card-dark\" : \"experience-card\"}>\n            <div\n              style={{ background: rgb(colorArrays) }}\n              className=\"experience-banner\"\n            >\n              <div className=\"experience-blurred_div\"></div>\n              <div className=\"experience-div-company\">\n                <h5 className=\"experience-text-company\">{cardInfo.company}</h5>\n              </div>\n\n              <img\n                crossOrigin={\"anonymous\"}\n                ref={imgRef}\n                className=\"experience-roundedimg\"\n                src={cardInfo.logo_path}\n                alt={cardInfo.company}\n                //onLoad={() => getColorArrays()}\n              />\n            </div>\n            <div className=\"experience-text-details\">\n              <h5\n                className={\n                  isDark\n                    ? \"experience-text-role dark-mode-text\"\n                    : \"experience-text-role\"\n                }\n              >\n                {cardInfo.position}\n              </h5>\n              <h5\n                className={\n                  isDark\n                    ? \"experience-text-date dark-mode-text\"\n                    : \"experience-text-date\"\n                }\n              >\n                {cardInfo.date}\n              </h5>\n              <p\n                className={\n                  isDark\n                    ? \"subTitle experience-text-desc dark-mode-text\"\n                    : \"subTitle experience-text-desc\"\n                }\n              >\n                {cardInfo.desc}\n              </p>\n              <ul>\n                <GetDescBullets\n                  descBullets={cardInfo.descBullets}\n                  isDark={isDark}\n                />\n              </ul>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}*/\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ExperienceCard.scss';\n\nexport default function ExperienceCard({ workExperiences, isDark }) {\n  const timelineRef = useRef(null);\n  const bulletRefs = useRef([]);\n  const cardRefs = useRef([]);\n  const [activeBullet, setActiveBullet] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const timelineScrollTop = timelineRef.current.scrollTop;\n      const bulletHeights = bulletRefs.current.map((bullet) => bullet.offsetTop);\n\n      let newActiveBullet = 0;\n      for (let i = 0; i < bulletHeights.length; i++) {\n        if (timelineScrollTop >= bulletHeights[i]) {\n          newActiveBullet = i;\n        } else {\n          break;\n        }\n      }\n\n      setActiveBullet(newActiveBullet);\n\n      // Update bullet and card fades based on scroll position\n      bulletRefs.current.forEach((bullet, index) => {\n        const bulletTop = bullet.offsetTop;\n        const bulletHeight = bullet.offsetHeight;\n        const scrollOffset = timelineScrollTop - bulletTop;\n        const fadeFactor = Math.min(1, Math.max(0, scrollOffset / bulletHeight));\n        bullet.style.opacity = 1 - fadeFactor;\n      });\n\n      cardRefs.current.forEach((card, index) => {\n        const cardTop = card.offsetTop;\n        const cardHeight = card.offsetHeight;\n        const scrollOffset = timelineScrollTop - cardTop;\n        const fadeFactor = Math.min(1, Math.max(0, scrollOffset / cardHeight));\n        card.style.opacity = 1 - fadeFactor;\n      });\n    };\n\n    timelineRef.current.addEventListener('scroll', handleScroll);\n\n    return () => {\n      timelineRef.current.removeEventListener('scroll', handleScroll);   \n\n    };\n  }, []);\n\n  const handleBulletClick = (index) => {\n    setActiveBullet(index);\n    const card = cardRefs.current[index];\n    card.scrollIntoView({ behavior: 'smooth' });\n  };\n\n\n  return (\n    <div className=\"timeline-container\">\n      <div className=\"timeline-bullets\" ref={timelineRef}>\n        {workExperiences.map((experience, index) => (\n          <div\n            key={index}\n            className={`bullet ${index === activeBullet ? 'active' : ''}`}\n            onClick={() => handleBulletClick(index)}\n            ref={(el) => (bulletRefs.current[index] = el)}\n          >\n            <span>{index + 1}</span>\n          </div>\n        ))}\n        <div className=\"line\"></div>\n      </div>\n      <div className=\"timeline-cards\">\n        {workExperiences.map((experience, index) => (\n          <div\n            key={index}\n            className={`card ${index === activeBullet ? 'active' : ''}`}\n            ref={(el) => (cardRefs.current[index] = el)}\n          >\n            <div className=\"card-top\">\n              <img src={experience.logo_path} alt={experience.company} />\n            </div>\n            <div className=\"card-bottom\">\n              <h3>{experience.title}</h3>\n              <ul>\n                {experience.descPoints.map((item, i) => (\n                  <li key={i}>{item}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}